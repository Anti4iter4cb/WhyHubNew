local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
   Name = "WhyHub",
   LoadingTitle = "WhyHub",
   LoadingSubtitle = "WhyHub",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "WhyHub"
   },
   Discord = {
      Enabled = false,
      Invite = "https://discord.gg/9JHBgHJfrP", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD.
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "WhyHub",
      Subtitle = "WhyHub",
      Note = "Join to Discrod Server for Key! https://discord.gg/9JHBgHJfrP",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = "SK21SA54xCa06543GEXZjgdSa14"
   }
})

Rayfield:Notify({
   Title = "Join to my Discord Server",
   Content = "https://discord.gg/9JHBgHJfrP",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Liti so Bad",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image

local Slider = Tab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 100},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   local Player = game.Players.LocalPlayer
   local Character = Player.Character

   Player.Character.Humanoid.WalkSpeed = Value


   end,
})

local InfJumps = Tab:CreateButton({
   Name = "InfJumps",
   Callback = function()
        		local Player = game.Players.LocalPlayer

local char = Player.Character or Player.CharacterAdded:wait()
local hum = char:WaitForChild("Humanoid")
 
local uis = game:GetService("UserInputService")
 
local jumps = 0
local maxJumps = 9999999
 
local currentTick = tick()
 
hum.StateChanged:Connect(function(oldState, newState)
    if newState == Enum.HumanoidStateType.Landed then
        jumps = 0
    end
end)
 
uis.JumpRequest:Connect(function()
    if jumps < maxJumps and tick() - currentTick > 0.2 then
       jumps += 1
        currentTick = tick()
        hum:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)
   end,
})

local Button = Tab:CreateButton({
   Name = "NoFallDmg",
   Callback = function()
   NOFALLDMG = true

while NOFALLDMG == true do

game:GetService("ReplicatedStorage").Events.FallDmg:Destroy()
end
   end,
})

local Tab = Window:CreateTab("Visuals", 4483362458)

local Section = Tab:CreateSection("Player Esp")

local Button = Tab:CreateButton({
   Name = "BoxEsp",
   Callback = function()
         		local lplr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local CurrentCamera = workspace.CurrentCamera
local worldToViewportPoint = CurrentCamera.worldToViewportPoint

local HeadOff = Vector3.new(0, 0.5, 0)
local LegOff = Vector3.new(0,3,0)

for i,v in pairs(game.Players:GetChildren()) do
    local BoxOutline = Drawing.new("Square")
    BoxOutline.Visible = false
    BoxOutline.Color = Color3.new(0,0,0)
    BoxOutline.Thickness = 3
    BoxOutline.Transparency = 1
    BoxOutline.Filled = false

    local Box = Drawing.new("Square")
    Box.Visible = false
    Box.Color = Color3.new(255,0,0)
    Box.Thickness = 1
    Box.Transparency = 1
    Box.Filled = false

    local HealthBarOutline = Drawing.new("Square")
    HealthBarOutline.Thickness = 3
    HealthBarOutline.Filled = false
    HealthBarOutline.Color = Color3.new(0,255,0)
    HealthBarOutline.Transparency = 1
    HealthBarOutline.Visible = false

    local HealthBar = Drawing.new("Square")
    HealthBar.Thickness = 1
    HealthBar.Filled = false
    HealthBar.Transparency = 1
    HealthBar.Visible = false

    function boxesp()
        game:GetService("RunService").RenderStepped:Connect(function()
            if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
                local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)

                local RootPart = v.Character.HumanoidRootPart
                local Head = v.Character.Head
                local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
                local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)

                if onScreen then
                    BoxOutline.Size = Vector2.new(3000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                    BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
                    BoxOutline.Visible = true

                    Box.Size = Vector2.new(3000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                    Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                    Box.Visible = true

                    HealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                    HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)
                    HealthBarOutline.Visible = true

                    HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / math.clamp(game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value, 0, game:GetService("Players")[v.Character.Name].NRPBS:WaitForChild("MaxHealth").Value)))
                    HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1 / HealthBar.Size.Y))
                    HealthBar.Color = Color3.fromRGB(255 - 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 0)
                    HealthBar.Visible = true

                    if v.TeamColor == lplr.TeamColor then
                        --- Our Team
                        BoxOutline.Visible = false
                        Box.Visible = false
                        HealthBarOutline.Visible = false
                        HealthBar.Visible = false
                    else
                        ---Enemy Team
                        BoxOutline.Visible = true
                        Box.Visible = true
                        HealthBarOutline.Visible = true
                        HealthBar.Visible = true
                    end

                else
                    BoxOutline.Visible = false
                    Box.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBar.Visible = false
                end
            else
                BoxOutline.Visible = false
                Box.Visible = false
                HealthBarOutline.Visible = false
                HealthBar.Visible = false
            end
        end)
    end
    coroutine.wrap(boxesp)()
end

game.Players.PlayerAdded:Connect(function(v)
    local BoxOutline = Drawing.new("Square")
    BoxOutline.Visible = false
    BoxOutline.Color = Color3.new(0,0,0)
    BoxOutline.Thickness = 3
    BoxOutline.Transparency = 1
    BoxOutline.Filled = false

    local Box = Drawing.new("Square")
    Box.Visible = false
    Box.Color = Color3.new(153,51,255)
    Box.Thickness = 1
    Box.Transparency = 1
    Box.Filled = false

    local HealthBarOutline = Drawing.new("Square")
    HealthBarOutline.Thickness = 3
    HealthBarOutline.Filled = false
    HealthBarOutline.Color = Color3.new(0,255,0)
    HealthBarOutline.Transparency = 1
    HealthBarOutline.Visible = false

    local HealthBar = Drawing.new("Square")
    HealthBar.Thickness = 1
    HealthBar.Filled = false
    HealthBar.Transparency = 1
    HealthBar.Visible = false

    function boxesp()
        game:GetService("RunService").RenderStepped:Connect(function()
            if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
                local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)

                local RootPart = v.Character.HumanoidRootPart
                local Head = v.Character.Head
                local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
                local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)

                if onScreen then
                    BoxOutline.Size =   Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                    BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
                    BoxOutline.Visible = true

                    Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                    Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                    Box.Visible = true

                    HealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                    HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)
                    HealthBarOutline.Visible = true

                    HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / math.clamp(game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value, 0, game:GetService("Players")[v.Character.Name].NRPBS:WaitForChild("MaxHealth").Value)))
                    HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1/HealthBar.Size.Y))
		    HealthBar.Color = Color3.fromRGB(255 - 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 0)                    
		    HealthBar.Visible = true

                    if v.TeamColor == lplr.TeamColor then
                        --- Our Team
                        BoxOutline.Visible = false
                        Box.Visible = false
                        HealthBarOutline.Visible = false
                        HealthBar.Visible = false
                    else
                        ---Enemy Team
                        BoxOutline.Visible = true
                        Box.Visible = true
                        HealthBarOutline.Visible = true
                        HealthBar.Visible = true
                    end

                else
                    BoxOutline.Visible = false
                    Box.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBar.Visible = false
                end
            else
                BoxOutline.Visible = false
                Box.Visible = false
                HealthBarOutline.Visible = false
                HealthBar.Visible = false
            end
        end)
    end
    coroutine.wrap(boxesp)()
end)
   end,
})

local Button = Tab:CreateButton({
   Name = "NameEsp",
   Callback = function()

local c = workspace.CurrentCamera
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
local rs = game:GetService("RunService")

local function esp(p,cr)
    local h = cr:WaitForChild("Humanoid")
    local hrp = cr:WaitForChild("HumanoidRootPart")

    local text = Drawing.new("Text")
    text.Visible = false
    text.Center = true
    text.Outline = true 
    text.Font = 2
    text.Color = Color3.fromRGB(153,51,255)
    text.Size = 13

    local c1
    local c2
    local c3

    local function dc()
        text.Visible = false
        text:Remove()
        if c1 then
            c1:Disconnect()
            c1 = nil 
        end
        if c2 then
            c2:Disconnect()
            c2 = nil 
        end
        if c3 then
            c3:Disconnect()
            c3 = nil 
        end
    end

    c2 = cr.AncestryChanged:Connect(function(_,parent)
        if not parent then
            dc()
        end
    end)

    c3 = h.HealthChanged:Connect(function(v)
        if (v<=0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
            dc()
        end
    end)

    c1 = rs.RenderStepped:Connect(function()
        local hrp_pos,hrp_onscreen = c:WorldToViewportPoint(hrp.Position)
        if hrp_onscreen then
            text.Position = Vector2.new(hrp_pos.X, hrp_pos.Y)
            text.Text = p.Name
            text.Visible = true
        else
            text.Visible = false
        end
    end)
end

local function p_added(p)
    if p.Character then
        esp(p,p.Character)
    end
    p.CharacterAdded:Connect(function(cr)
        esp(p,cr)
    end)
end

for i,p in next, ps:GetPlayers() do 
    if p ~= lp then
        p_added(p)
    end
end

ps.PlayerAdded:Connect(p_added)
end
})

local Section = Tab:CreateSection("Chest Esp")

local Button = Tab:CreateButton({
   Name = "Uncommon Chest",
   Callback = function()
   local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
for i, v in pairs(game:GetService("Workspace").Effects:GetChildren()) do
    if v:IsA("Model") then
    local Chest = v:FindFirstChildOfClass("MeshPart")
    if Chest and Chest.MeshId == "rbxassetid://10858352843" then
    if not v:FindFirstChild("ESP") then
        local BillboardGui = Instance.new("BillboardGui")
        local TextLabel = Instance.new("TextLabel")
        local Highlight = Instance.new("Highlight")

        BillboardGui.Parent = v
        BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        BillboardGui.Active = true
        BillboardGui.AlwaysOnTop = true
        BillboardGui.LightInfluence = 1
        BillboardGui.MaxDistance = 750
        BillboardGui.Size = UDim2.new(20, 0, 20, 0)
        BillboardGui.Name = "ESP"

        TextLabel.Parent = BillboardGui
        TextLabel.BackgroundColor3 = Color3.new(0, 0, 0)
        TextLabel.BackgroundTransparency = 1
        TextLabel.BorderSizePixel = 0
        TextLabel.Size = UDim2.new(1, 0, 1, 1)
        TextLabel.Font = Enum.Font.Ubuntu
        TextLabel.Text = "Uncommon Chest"
        TextLabel.TextColor3 = Color3.fromRGB(149, 69, 53)
        TextLabel.TextScaled = false
        TextLabel.TextSize = 14
        TextLabel.TextWrapped = true

        Highlight.Archivable = true
        Highlight.Parent = v
        Highlight.Name = "ESPHighlight"
        Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        Highlight.Enabled = true
        Highlight.FillColor = Color3.new(0, 204, 0)
        Highlight.FillTransparency = 0.5
        Highlight.OutlineColor = Color3.new(0, 204, 0)
        Highlight.OutlineTransparency = 0
        Highlight.Visible = true

            end
        end
    end
end
end)
   end,
})

local Button = Tab:CreateButton({
   Name = "Rare Chest",
   Callback = function()
   local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
for i, v in pairs(game:GetService("Workspace").Effects:GetChildren()) do
    if v:IsA("Model") then
    local Chest = v:FindFirstChildOfClass("MeshPart")
    if Chest and Chest.MeshId == "rbxassetid://10788852296" then
    if not v:FindFirstChild("ESP") then
        local BillboardGui = Instance.new("BillboardGui")
        local TextLabel = Instance.new("TextLabel")
        local Highlight = Instance.new("Highlight")

        BillboardGui.Parent = v
        BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        BillboardGui.Active = true
        BillboardGui.AlwaysOnTop = true
        BillboardGui.LightInfluence = 1
        BillboardGui.MaxDistance = 750
        BillboardGui.Size = UDim2.new(20, 0, 20, 0)
        BillboardGui.Name = "ESP"

        TextLabel.Parent = BillboardGui
        TextLabel.BackgroundColor3 = Color3.new(0, 0, 0)
        TextLabel.BackgroundTransparency = 1
        TextLabel.BorderSizePixel = 0
        TextLabel.Size = UDim2.new(1, 0, 1, 1)
        TextLabel.Font = Enum.Font.Ubuntu
        TextLabel.Text = "Rare Chest"
        TextLabel.TextColor3 = Color3.fromRGB(1, 116, 254)
        TextLabel.TextScaled = false
        TextLabel.TextSize = 14
        TextLabel.TextWrapped = true

        Highlight.Archivable = true
        Highlight.Parent = v
        Highlight.Name = "ESPHighlight"
        Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        Highlight.Enabled = true
        Highlight.FillColor = Color3.new(0,0,255)
        Highlight.FillTransparency = 0.5
        Highlight.OutlineColor = Color3.new(0,0,255)
        Highlight.OutlineTransparency = 0
        Highlight.Visible = true

            end
        end
    end
end
end)
   end,
})

local Button = Tab:CreateButton({
   Name = "Legendary Chest",
   Callback = function()
   local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
for i, v in pairs(game:GetService("Workspace").Effects:GetChildren()) do
    if v:IsA("Model") then
    local Chest = v:FindFirstChildOfClass("MeshPart")
    if Chest and Chest.MeshId == "rbxassetid://10798559852" then
    if not v:FindFirstChild("ESP") then
        local BillboardGui = Instance.new("BillboardGui")
        local TextLabel = Instance.new("TextLabel")
        local Highlight = Instance.new("Highlight")

        BillboardGui.Parent = v
        BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        BillboardGui.Active = true
        BillboardGui.AlwaysOnTop = true
        BillboardGui.LightInfluence = 1
        BillboardGui.MaxDistance = 1500
        BillboardGui.Size = UDim2.new(20, 0, 20, 0)
        BillboardGui.Name = "ESP"

        TextLabel.Parent = BillboardGui
        TextLabel.BackgroundColor3 = Color3.new(0, 0, 0)
        TextLabel.BackgroundTransparency = 1
        TextLabel.BorderSizePixel = 0
        TextLabel.Size = UDim2.new(1, 0, 1, 1)
        TextLabel.Font = Enum.Font.Ubuntu
        TextLabel.Text = "Legendary Chest"
        TextLabel.TextColor3 = Color3.fromRGB(255, 195, 0)
        TextLabel.TextScaled = false
        TextLabel.TextSize = 14
        TextLabel.TextWrapped = true

        Highlight.Archivable = true
        Highlight.Parent = v
        Highlight.Name = "ESPHighlight"
        Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        Highlight.Enabled = true
        Highlight.FillColor = Color3.new(255, 195, 0)
        Highlight.FillTransparency = 0.5
        Highlight.OutlineColor = Color3.new(0, 0, 255)
        Highlight.OutlineTransparency = 0
        Highlight.Visible = true

            end
        end
     end
    end
end)
   end,
})


local Button = Tab:CreateButton({
   Name = "Mythical Chest",
   Callback = function()
   local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
for i, v in pairs(game:GetService("Workspace").Effects:GetChildren()) do
    if v:IsA("Model") then
    local Chest = v:FindFirstChildOfClass("MeshPart")
    if Chest and Chest.MeshId == "rbxassetid://10811929054" then
    if not v:FindFirstChild("ESP") then
        local BillboardGui = Instance.new("BillboardGui")
        local TextLabel = Instance.new("TextLabel")
        local Highlight = Instance.new("Highlight")

        BillboardGui.Parent = v
        BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        BillboardGui.Active = true
        BillboardGui.AlwaysOnTop = true
        BillboardGui.LightInfluence = 1
        BillboardGui.MaxDistance = 1500
        BillboardGui.Size = UDim2.new(20, 0, 20, 0)
        BillboardGui.Name = "ESP"

        TextLabel.Parent = BillboardGui
        TextLabel.BackgroundColor3 = Color3.new(0, 0, 0)
        TextLabel.BackgroundTransparency = 1
        TextLabel.BorderSizePixel = 0
        TextLabel.Size = UDim2.new(1, 0, 1, 1)
        TextLabel.Font = Enum.Font.Ubuntu
        TextLabel.Text = "Mythical Chest"
        TextLabel.TextColor3 = Color3.fromRGB(88, 24, 69)
        TextLabel.TextScaled = false
        TextLabel.TextSize = 14
        TextLabel.TextWrapped = true

        Highlight.Archivable = true
        Highlight.Parent = v
        Highlight.Name = "ESPHighlight"
        Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        Highlight.Enabled = true
        Highlight.FillColor = Color3.new(88, 24, 69)
        Highlight.FillTransparency = 0.5
        Highlight.OutlineColor = Color3.new(100, 60, 70)
        Highlight.OutlineTransparency = 0
        Highlight.Visible = true

            end
        end
     end
    end
end)
   end,
})

local Tab = Window:CreateTab("Misc", 4483362458)

local Button = Tab:CreateButton({
   Name = "Chat Logger",
   Callback = function()
   	loadstring(game:HttpGet("https://pastebin.com/raw/stggPUBM", true))()
   end,
})

local Button = Tab:CreateButton({
   Name = "AntiAfk",
   Callback = function()
       wait(0.5)local ba=Instance.new("ScreenGui")
local ca=Instance.new("TextLabel")local da=Instance.new("Frame")
local _b=Instance.new("TextLabel")local ab=Instance.new("TextLabel")ba.Parent=game.CoreGui
ba.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;ca.Parent=ba;ca.Active=true
ca.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ca.Draggable=true
ca.Position=UDim2.new(0.698610067,0,0.098096624,0)ca.Size=UDim2.new(0,370,0,52)
ca.Font=Enum.Font.SourceSansSemibold;ca.Text="ANTI AFK"ca.TextColor3=Color3.new(255,0,0)
ca.TextSize=22;da.Parent=ca
da.BackgroundColor3=Color3.new(0.196078,0.196078,0.196078)da.Position=UDim2.new(0,0,1.0192306,0)
da.Size=UDim2.new(0,370,0,107)_b.Parent=da
_b.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)_b.Position=UDim2.new(0,0,0.800455689,0)
_b.Size=UDim2.new(0,370,0,21)_b.Font=Enum.Font.Arial;_b.Text="WhyHub"
_b.TextColor3=Color3.new(255,0,0)_b.TextSize=20;ab.Parent=da
ab.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ab.Position=UDim2.new(0,0,0.158377,0)
ab.Size=UDim2.new(0,370,0,44)ab.Font=Enum.Font.ArialBold;ab.Text="ACTIVATED"
ab.TextColor3=Color3.new(0,1,1)ab.TextSize=20;local bb=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
bb:CaptureController()bb:ClickButton2(Vector2.new())
end)
   end,
})

local Tab = Window:CreateTab("AutoFarm", 4483362458)

  
local Toggle = Tab:CreateToggle({
   Name = "Rifle Farm",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)

   rifleFarm = Value

   while rifleFarm == true do

local args = {
    [1] = "fire",
    [2] = {
        ["Start"] = CFrame.new(7489.91796875, -2148.17236328125, -17320.529296875) * CFrame.Angles(1.4612444639205933, -0.06177064776420593, 1.164029836654663),
        ["Gun"] = "Rifle",
        ["joe"] = "true",
        ["Position"] = Vector3.new(7669.64404296875, -2176.386474609375, -17323.162109375)
    }
}

game:GetService("ReplicatedStorage").Events.CIcklcon:FireServer(unpack(args))

local args = {
    [1] = "reload",
    [2] = {
        ["Gun"] = "Rifle"
    }
}

game:GetService("ReplicatedStorage").Events.CIcklcon.gunFunctions:InvokeServer(unpack(args))

end

   end,
})

local Button = Tab:CreateButton({
   Name = "Fishman TP",
   Callback = function()
   
   	     local teleport_table = {
    location25 = Vector3.new(5639, -94, -16612) -- your desired position
}

local tween_s = game:GetService('TweenService')
local tweeninfo = TweenInfo.new(0,Enum.EasingStyle.Linear)

local lp = game.Players.LocalPlayer

function bypass_teleport(v)
    if lp.Character and 
    lp.Character:FindFirstChild('HumanoidRootPart') then
        local cf = CFrame.new(v)
        local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
        a:Play()
    end
end

bypass_teleport(teleport_table.location25)

   end,
})

local Button = Tab:CreateButton({
   Name = "Rifle Farm Set Pos",
   Callback = function()
   
   	     local teleport_table = {
    location26 = Vector3.new(7487, -2149, -17320) -- your desired position
}

local tween_s = game:GetService('TweenService')
local tweeninfo = TweenInfo.new(40,Enum.EasingStyle.Linear)

local lp = game.Players.LocalPlayer

function bypass_teleport(v)
    if lp.Character and 
    lp.Character:FindFirstChild('HumanoidRootPart') then
        local cf = CFrame.new(v)
        local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
        a:Play()
    end
end

bypass_teleport(teleport_table.location26)

   end,
})

local Section = Tab:CreateSection("Auto Stats")

local Toggle = Tab:CreateToggle({
   Name = "Strength",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)

Strength = Value
while Strength == true do
wait(0.23)
local args = {
    [1] = "Strength",
    [3] = 1
}

game:GetService("ReplicatedStorage").Events.stats:FireServer(unpack(args))

	    end

   end,
})


local Toggle = Tab:CreateToggle({
   Name = "Stamina",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   Stamina = Value
   		while Stamina == true do
wait(0.23)
local args = {
    [1] = "Stamina",
    [3] = 1
}

game:GetService("ReplicatedStorage").Events.stats:FireServer(unpack(args))

	    end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Defense",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   Defense = Value
   		while Defense == true do
wait(0.23)
local args = {
    [1] = "Defense",
    [3] = 1
}

game:GetService("ReplicatedStorage").Events.stats:FireServer(unpack(args))

	    end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Gun",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false

   		Gun = Value
		while Gun == true do
wait(0.23)
local args = {
    [1] = "GunMastery",
    [3] = 1
}

game:GetService("ReplicatedStorage").Events.stats:FireServer(unpack(args))
	    end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Fruit",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false

   		fruit = Value
		while fruit == true do
wait(0.23)
local args = {
    [1] = "DevilFruitMastery",
    [3] = 1
}

game:GetService("ReplicatedStorage").Events.stats:FireServer(unpack(args))
	    end

   end,
})


local Toggle = Tab:CreateToggle({
   Name = "Sword",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false

   		Sword = Value
		while Sword == true do
wait(0.23)
local args = {
    [1] = "SwordMastery",
    [3] = 1
}

game:GetService("ReplicatedStorage").Events.stats:FireServer(unpack(args))
	    end

   end,
})
